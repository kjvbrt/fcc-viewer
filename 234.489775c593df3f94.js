"use strict";(self.webpackChunkFCCViewer=self.webpackChunkFCCViewer||[]).push([[234],{1666:(F,b,x)=>{x.r(b),x.d(b,{RHistStatsPainter:()=>T,RLegendPainter:()=>k,RPavePainter:()=>m,RPaveTextPainter:()=>y});var M=x(8428),C=x(2944),E=x(628),P=x(7527),S=x(4339);class m extends E.p{drawContent(){return Promise.resolve(this)}drawPave(){let t=this.getPadPainter().getPadRect(),e=this.getFramePainter();this.onFrame=e&&this.v7EvalAttr("onFrame",!0),this.corner=this.v7EvalAttr("corner",2);let i=this.v7EvalAttr("visible",!0),a=this.v7EvalLength("offsetX",t.width,.02),s=this.v7EvalLength("offsetY",t.height,.02),n=this.v7EvalLength("width",t.width,.3),r=this.v7EvalLength("height",t.height,.3);if(this.createG(),this.draw_g.classed("most_upper_primitives",!0),!i)return Promise.resolve(this);this.createv7AttLine("border_"),this.createv7AttFill();let h=0,d=0,g=this.onFrame?e.getFrameRect():t;switch(this.corner){case 1:h=g.x+a,d=g.y+s;break;case 3:h=g.x+a,d=g.y+g.height-s-r;break;case 4:h=g.x+g.width-a-n,d=g.y+g.height-s-r;break;default:h=g.x+g.width-a-n,d=g.y+s}return this.draw_g.attr("transform",`translate(${h},${d})`),this.draw_g.append("svg:rect").attr("x",0).attr("width",n).attr("y",0).attr("height",r).call(this.lineatt.func).call(this.fillatt.func),this.pave_width=n,this.pave_height=r,this.drawContent().then(()=>((0,M.isBatchMode)()||(M.settings.ContextMenu&&this.paveContextMenu&&this.draw_g.on("contextmenu",l=>this.paveContextMenu(l)),(0,S.uI)(this,{x:h,y:d,width:n,height:r,minwidth:20,minheight:20,redraw:l=>this.sizeChanged(l)})),this))}sizeChanged(t){this.pave_width=t.width,this.pave_height=t.height;let e=t.x,i=t.y,a=this.getPadPainter().getPadRect(),s=this.onFrame?this.getFramePainter().getFrameRect():a,n=0,r=0,h={};switch(this.corner){case 1:n=e-s.x,r=i-s.y;break;case 3:n=e-s.x,r=s.y+s.height-i-this.pave_height;break;case 4:n=s.x+s.width-e-this.pave_width,r=s.y+s.height-i-this.pave_height;break;default:n=s.x+s.width-e-this.pave_width,r=i-s.y}this.v7AttrChange(h,"offsetX",n/a.width),this.v7AttrChange(h,"offsetY",r/a.height),this.v7AttrChange(h,"width",this.pave_width/a.width),this.v7AttrChange(h,"height",this.pave_height/a.height),this.v7SendAttrChanges(h,!1),this.draw_g.select("rect").attr("width",this.pave_width).attr("height",this.pave_height),this.drawContent()}redraw(){return this.drawPave()}static draw(t,e,i){let a=new m(t,e,i,"pave");return(0,P.ensureRCanvas)(a,!1).then(()=>a.drawPave())}}class k extends m{drawContent(){let t=this.getObject(),e=this.v7EvalFont("text",{size:12,color:"black",align:22}),i=this.pave_width,a=this.pave_height,s=t.fEntries.length,n=this.getPadPainter();if(t.fTitle&&s++,!s||!n)return Promise.resolve(this);let r=a/s,h=0,d=.02*i;e.setSize(a/(1.2*s)),this.startTextDrawing(e,"font"),t.fTitle&&(this.drawText({latex:1,width:i-2*d,height:r,x:d,y:h,text:t.fTitle}),h+=r);for(let g=0;g<t.fEntries.length;++g){let l=null,o=t.fEntries[g],w=Math.round(i/4);this.drawText({latex:1,width:.75*i-3*d,height:r,x:2*d+w,y:h,text:o.fLabel}),"custom"!=o.fDrawableId?l=n.findSnap(o.fDrawableId,!0):o.fDrawable.fIO&&(l=new E.p(this.getDom(),o.fDrawable.fIO),o.fLine&&l.createv7AttLine(),o.fFill&&l.createv7AttFill(),o.fMarker&&l.createv7AttMarker()),l&&o.fFill&&l.fillatt&&this.draw_g.append("svg:path").attr("d",`M${Math.round(d)},${Math.round(h+.1*r)}h${w}v${Math.round(.8*r)}h${-w}z`).call(l.fillatt.func),l&&o.fLine&&l.lineatt&&this.draw_g.append("svg:path").attr("d",`M${Math.round(d)},${Math.round(h+r/2)}h${w}`).call(l.lineatt.func),l&&o.fError&&l.lineatt&&this.draw_g.append("svg:path").attr("d",`M${Math.round(d+i/8)},${Math.round(h+.2*r)}v${Math.round(.6*r)}`).call(l.lineatt.func),l&&o.fMarker&&l.markeratt&&this.draw_g.append("svg:path").attr("d",l.markeratt.create(d+i/8,h+r/2)).call(l.markeratt.func),h+=r}return this.finishTextDrawing()}static draw(t,e,i){let a=new k(t,e,i,"legend");return(0,P.ensureRCanvas)(a,!1).then(()=>a.drawPave())}}class y extends m{drawContent(){let t=this.getObject(),e=this.v7EvalFont("text",{size:12,color:"black",align:22}),i=this.pave_width,a=this.pave_height,s=t.fText.length;if(!s)return;let n=a/s,r=0,h=.02*i;e.setSize(a/(1.2*s)),this.startTextDrawing(e,"font");for(let d=0;d<t.fText.length;++d)this.drawText({latex:1,width:i-2*h,height:n,x:h,y:r,text:t.fText[d]}),r+=n;return this.finishTextDrawing(void 0,!0)}static draw(t,e,i){let a=new y(t,e,i,"pavetext");return(0,P.ensureRCanvas)(a,!1).then(()=>a.drawPave())}}class T extends m{clearStat(){this.stats_lines=[]}addText(t){this.stats_lines.push(t)}updateStatistic(t){this.stats_lines=t.lines,this.drawStatistic(this.stats_lines)}fillStatistic(){if(this.getPadPainter()?._fast_drawing)return!1;let e=this.getObject();if(void 0!==e.fLines)return this.stats_lines=e.fLines,delete e.fLines,!0;if(this.v7OfflineMode()){let i=this.getMainPainter();return"function"==typeof i?.fillStatistic&&i.fillStatistic(this,M.gStyle.fOptStat,M.gStyle.fOptFit)}return void 0!==this.stats_lines}format(t,e){switch(e||(e="stat"),e){case"stat":e=M.gStyle.fStatFormat;break;case"fit":e=M.gStyle.fFitFormat;break;case"entries":if(Math.abs(t)<1e9&&Math.round(t)==t)return t.toFixed(0);e="14.7g";break;case"last":e=this.lastformat}let i=(0,C.Ee)(t,e||"6.4g",!0);return this.lastformat=i[1],i[0]}drawContent(){return this.fillStatistic()?this.drawStatistic(this.stats_lines):Promise.resolve(this)}changeMask(t){let e=this.getObject(),i=1<<t;e.fShowMask=e.fShowMask&i?e.fShowMask&~i:e.fShowMask|i,this.fillStatistic()&&this.drawStatistic(this.stats_lines)}statsContextMenu(t){t.preventDefault(),t.stopPropagation(),createMenu(t,this).then(e=>{let i=this.getObject(),a=this.changeMask.bind(this);e.add("header: StatBox");for(let s=0;s<i.fEntries.length;++s)e.addchk(i.fShowMask&1<<s,i.fEntries[s],s,a);return this.fillObjectExecMenu(e)}).then(e=>e.show())}drawStatistic(t){let e=this.v7EvalFont("stats_text",{size:12,color:"black",align:22}),i=0,a=0,s=0,n=this.pave_width,r=this.pave_height;if(!t)return Promise.resolve(this);let h=t.length;for(let f=0;f<h;++f){let u=t[f];if(f>0&&(s=Math.max(s,u.length)),0==f||u.indexOf("|")<0)continue;0===i&&(i=f);let c=u.split("|");c.length>a&&(a=c.length)}let d=r/h,g=!1,l=.02*n,o=this.draw_g.select(".statlines");if(o.empty()?o=this.draw_g.append("svg:g").attr("class","statlines"):o.selectAll("*").remove(),e.setSize(r/(1.2*h)),this.startTextDrawing(e,"font",o),1==h)this.drawText({width:n,height:r,text:t[0],latex:1,draw_g:o});else for(let f=0;f<h;++f){let u=f*d;if(i&&f>=i){let c=t[f].split("|");for(let _=0;_<c.length;++_)this.drawText({align:"middle",x:n*_/a,y:u,latex:0,width:n/a,height:d,text:c[_],draw_g:o})}else if(t[f].indexOf("=")<0){if(0==f){g=!0;let c=Math.max(s,Math.round((n-2*l)/d/.65));t[f].length>c+5&&(t[f]=t[f].slice(0,c+2)+"...")}this.drawText({align:0==f?"middle":"start",x:l,y:u,width:n-2*l,height:d,text:t[f],draw_g:o})}else{let c=t[f].split("="),_=[];for(let v=0;v<2;++v)_.push({align:0==v?"start":"end",x:l,y:u,width:n-2*l,height:d,text:c[v],draw_g:o,_expected_width:n-2*l,_args:_,post_process(O){this._args[0].ready&&this._args[1].ready&&O.scaleTextDrawing(1.05*(this._args[0].result_width&&this._args[1].result_width)/this.__expected_width,this.draw_g)}});for(let v=0;v<2;++v)this.drawText(_[v])}}let w="";if(g&&(w+="M0,"+Math.round(d)+"h"+n),i>0&&a>1){for(let f=i;f<h;++f)w+="M0,"+Math.round(f*d)+"h"+n;for(let f=0;f<a-1;++f)w+="M"+Math.round(n/a*(f+1))+","+Math.round(i*d)+"V"+r}return w&&this.draw_g.append("svg:path").attr("d",w),this.finishTextDrawing(o)}redraw(t){if(t&&"string"==typeof t&&0==t.indexOf("zoom")&&this.v7NormalMode()){let e={_typename:"ROOT::Experimental::RHistStatBoxBase::RRequest",mask:this.getObject().fShowMask};this.v7SubmitRequest("stat",e,i=>this.updateStatistic(i))}return this.drawPave()}static draw(t,e,i){let a=new T(t,e,i,e);return(0,P.ensureRCanvas)(a,!1).then(()=>a.drawPave())}}}}]);