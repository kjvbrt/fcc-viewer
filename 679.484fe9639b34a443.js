"use strict";(self.webpackChunkFCCViewer=self.webpackChunkFCCViewer||[]).push([[679],{7679:(X,y,u)=>{u.r(y),u.d(y,{TSplinePainter:()=>g});var p=u(8428),m=u(2944),M=u(4010),P=u(9275);class g extends M.tK{updateObject(t,i){let e=this.getObject();return e._typename==t._typename&&(e!==t&&Object.assign(e,t),void 0!==i&&this.decodeOptions(i),!0)}eval(t,i){let e=i-t.fX;return"TSplinePoly3"==t._typename?t.fY+e*(t.fB+e*(t.fC+e*t.fD)):"TSplinePoly5"==t._typename?t.fY+e*(t.fB+e*(t.fC+e*(t.fD+e*(t.fE+e*t.fF)))):t.fY+e}findX(t){let i=this.getObject(),e=0,n=i.fNp-1;if(t<=i.fXmin)return 0;if(t>=i.fXmax)return n;if(i.fKstep)e=Math.round((t-i.fXmin)/i.fDelta),t<i.fPoly[e].fX?e=Math.max(e-1,0):e<n&&t>i.fPoly[e+1].fX&&++e;else for(;n-e>1;){let a=Math.round((e+n)/2);t>i.fPoly[a].fX?e=a:n=a}return e}createDummyHisto(){let t=0,i=1,e=0,n=1,a=this.getObject();a?.fPoly&&(t=i=a.fPoly[0].fX,e=n=a.fPoly[0].fY,a.fPoly.forEach(l=>{t=Math.min(l.fX,t),i=Math.max(l.fX,i),e=Math.min(l.fY,e),n=Math.max(l.fY,n)}),n>0&&(n*=1+p.gStyle.fHistTopMargin),e<0&&(e*=1+p.gStyle.fHistTopMargin));let s=(0,p.create)("TH1I");return s.fName=a.fName+"_hist",s.fTitle=a.fTitle,s.fXaxis.fXmin=t,s.fXaxis.fXmax=i,s.fYaxis.fXmin=e,s.fYaxis.fXmax=n,s}processTooltipEvent(t){let s,l,i=!1,e=this.getObject(),a=this.getFramePainter()?.getGrFuncs(this.options.second_x,this.options.second_y),r=null,h=0;if(null!==t&&e&&a?(s=a.revertAxis("x",t.x),h=this.findX(s),r=e.fPoly[h],l=this.eval(r,s),h<e.fN-1&&Math.abs(e.fPoly[h+1].fX-s)<Math.abs(s-r.fX)&&(r=e.fPoly[++h]),Math.abs(a.grx(r.fX)-t.x)<.5*this.knot_size?(s=r.fX,l=r.fY):(r=null,(s<e.fXmin||s>e.fXmax)&&(i=!0))):i=!0,i)return this.draw_g&&this.draw_g.select(".tooltip_bin").remove(),null;let o=this.draw_g.select(".tooltip_bin"),c=this.lineatt.width+3;o.empty()&&(o=this.draw_g.append("svg:circle").attr("class","tooltip_bin").style("pointer-events","none").attr("r",c).style("fill","none").call(this.lineatt.func));let f={name:this.getObject().fName,title:this.getObject().fTitle,x:a.grx(s),y:a.gry(l),color1:this.lineatt.color,lines:[],exact:null!==r||Math.abs(a.gry(l)-t.y)<c};f.changed=o.property("current_xx")!==s,f.menu=f.exact,f.menu_dist=Math.sqrt((f.x-t.x)**2+(f.y-t.y)**2),f.changed&&o.attr("cx",Math.round(f.x)).attr("cy",Math.round(f.y)).property("current_xx",s);let d=this.getObjectHint();return d.length>0&&f.lines.push(d),f.lines.push("x = "+a.axisAsText("x",s)),f.lines.push("y = "+a.axisAsText("y",l)),null!==r&&(f.lines.push("knot = "+h),f.lines.push("B = "+(0,m.Ee)(r.fB,p.gStyle.fStatFormat)),f.lines.push("C = "+(0,m.Ee)(r.fC,p.gStyle.fStatFormat)),f.lines.push("D = "+(0,m.Ee)(r.fD,p.gStyle.fStatFormat)),void 0!==r.fE&&void 0!==r.fF&&(f.lines.push("E = "+(0,m.Ee)(r.fE,p.gStyle.fStatFormat)),f.lines.push("F = "+(0,m.Ee)(r.fF,p.gStyle.fStatFormat)))),f}redraw(){let t=this.getObject(),i=this.getFramePainter(),e=i?.getGrFuncs(this.options.second_x,this.options.second_y),n=i.getFrameWidth(),a=i.getFrameHeight();if(this.createG(!0),this.knot_size=5,this.createAttLine({attr:t}),this.options.Line||this.options.Curve){let s=Math.max(10,t.fNpx),l=Math.max(i.scale_xmin,t.fXmin),r=Math.min(i.scale_xmax,t.fXmax),h=this.findX(l),o=[];i.logx&&(l=Math.log(l),r=Math.log(r));for(let d=0;d<s;++d){let x=l+(r-l)/s*(d-1);for(i.logx&&(x=Math.exp(x));h<t.fNp-1&&x>t.fPoly[h+1].fX;)++h;let _=this.eval(t.fPoly[h],x);o.push({x,y:_,grx:e.grx(x),gry:e.gry(_)})}let c=a;void 0!==i.hmin&&i.hmin>=0&&(c=Math.round(e.gry(0)),(c>a||c<0)&&(c=a));let f=(0,m.Cq)("bezier",o,c,2);this.draw_g.append("svg:path").attr("class","line").attr("d",f.path).style("fill","none").call(this.lineatt.func)}if(this.options.Mark){let s="";this.createAttMarker({attr:t}),this.markeratt.resetPos(),this.knot_size=this.markeratt.getFullSize();for(let l=0;l<t.fPoly.length;l++){let r=t.fPoly[l],h=e.grx(r.fX);if(h>-this.knot_size&&h<n+this.knot_size){let o=e.gry(r.fY);o>-this.knot_size&&o<a+this.knot_size&&(s+=this.markeratt.create(h,o))}}s&&this.draw_g.append("svg:path").attr("d",s).call(this.markeratt.func)}}canZoomInside(t){return!("x"!==t||!this.getObject())}decodeOptions(t){let i=new m.pc(t);this.options||(this.options={});let e=!!this.getMainPainter();Object.assign(this.options,{Same:i.check("SAME"),Line:i.check("L"),Curve:i.check("C"),Mark:i.check("P"),Hopt:"AXIS",second_x:!1,second_y:!1}),!this.options.Line&&!this.options.Curve&&!this.options.Mark&&(this.options.Curve=!0),i.check("X+")&&(this.options.Hopt+="X+",this.options.second_x=e),i.check("Y+")&&(this.options.Hopt+="Y+",this.options.second_y=e),this.storeDrawOpt(t)}static draw(t,i,e){let n=new g(t,i);n.decodeOptions(e);let a=Promise.resolve(),s=!n.getMainPainter();if(s||n.options.second_x||n.options.second_y){if(n.options.Same&&s)return console.warn("TSpline painter requires histogram to be drawn"),null;let l=n.createDummyHisto();a=P.TH1Painter.draw(t,l,n.options.Hopt)}return a.then(()=>(n.addToPadPrimitives(),n.redraw(),n))}}}}]);